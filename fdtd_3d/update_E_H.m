% -------------------------------------------------------------------------
%     This script is to update E and H fields in fdtd time loop
%     ------
%  v0: the C_ constants always are considered as full 3d matrices
% -------------------------------------------------------------------------

% -------------------------------------------------------------------------
%   Save boundaries of E: time n
% -------------------------------------------------------------------------
save_Boundaries_E_time_n

% -------------------------------------------------------------------------
%   Update E:
% -------------------------------------------------------------------------

% disp('Update Ex')
Ex = times3d( C_exe , Ex )                 + ...
        times3d( C_exhz , difneg3d( Hz , 'j' ) ) + ...
        times3d( C_exhy , difneg3d( Hy , 'k' ) ) ; 

% disp('Update Ey')
Ey = times3d( C_eye , Ey )                 + ...
        times3d( C_eyhx , difneg3d( Hx , 'k' ) ) + ...
        times3d( C_eyhz , difneg3d( Hz , 'i' ) ) ; 
    
% disp('Update Ez')
Ez = times3d( C_eze , Ez )                 + ...
        times3d( C_ezhy , difneg3d( Hy , 'i' ) ) + ...
        times3d( C_ezhx , difneg3d( Hx , 'j' ) ) ; 

% -------------------------------------------------------------------------
%   Save boundaries of E: time n+1
% -------------------------------------------------------------------------
save_Boundaries_E_time_n_plus_1

% -------------------------------------------------------------------------
%   Apply Mur Absorption on E
% -------------------------------------------------------------------------
apply_Mur_1_E

% -------------------------------------------------------------------------
%   Save boundaries of H: time n
% -------------------------------------------------------------------------
save_Boundaries_H_time_n

% -------------------------------------------------------------------------
%   Update H:
% -------------------------------------------------------------------------

% disp('Update Hx')
Hx = times3d( C_hxh , Hx )                 + ...
        times3d( C_hxez , difpos3d( Ez , 'j' ) ) + ...
        times3d( C_hxey , difpos3d( Ey , 'k' ) ) ; 

% disp('Update Hy')
Hy = times3d( C_hyh , Hy )                 + ...
        times3d( C_hyex , difpos3d( Ex , 'k' ) ) + ...
        times3d( C_hyez , difpos3d( Ez , 'i' ) ) ; 
    
% disp('Update Hz')
Hz = times3d( C_hzh , Hz )                 + ...
        times3d( C_hzey , difpos3d( Ey , 'i' ) ) + ...
        times3d( C_hzex , difpos3d( Ex , 'j' ) ) ;    


% -------------------------------------------------------------------------
%   Save boundaries of H: time n+1
% -------------------------------------------------------------------------
save_Boundaries_H_time_n_plus_1

% -------------------------------------------------------------------------
%   Apply Mur Absorption on H
% -------------------------------------------------------------------------
apply_Mur_1_H       

% -------------------------------------------------------------------------
%     -------------------------
%     by Michael Alvarez
%     michael.alvarez2@upr.edu
%     -------------------------
% -------------------------------------------------------------------------